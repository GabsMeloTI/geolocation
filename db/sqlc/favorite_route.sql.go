// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: favorite_route.sql

package db

import (
	"context"
	"encoding/json"
)

const createFavoriteRoute = `-- name: CreateFavoriteRoute :one
INSERT INTO public.favorite_route
(id, tolls_id, response, user_organization, created_who, created_at)
VALUES(nextval('favorite_route_id_seq'::regclass), $1, $2, $3, $4, now())
    RETURNING id, tolls_id, response, user_organization, created_who, created_at, updated_who, updated_at
`

type CreateFavoriteRouteParams struct {
	TollsID          int64           `json:"tolls_id"`
	Response         json.RawMessage `json:"response"`
	UserOrganization string          `json:"user_organization"`
	CreatedWho       string          `json:"created_who"`
}

func (q *Queries) CreateFavoriteRoute(ctx context.Context, arg CreateFavoriteRouteParams) (FavoriteRoute, error) {
	row := q.db.QueryRowContext(ctx, createFavoriteRoute,
		arg.TollsID,
		arg.Response,
		arg.UserOrganization,
		arg.CreatedWho,
	)
	var i FavoriteRoute
	err := row.Scan(
		&i.ID,
		&i.TollsID,
		&i.Response,
		&i.UserOrganization,
		&i.CreatedWho,
		&i.CreatedAt,
		&i.UpdatedWho,
		&i.UpdatedAt,
	)
	return i, err
}
