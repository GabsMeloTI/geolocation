// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: user_plan.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const createUserPlans = `-- name: CreateUserPlans :one
INSERT INTO public.user_plan
(id, id_user, id_plan, active, active_date, expiration_date)
VALUES(nextval('user_plan_id_seq'::regclass), $1, $2, true, now(), $3)
    RETURNING id, id_user, id_plan, active, active_date, expiration_date
`

type CreateUserPlansParams struct {
	IDUser         sql.NullInt64 `json:"id_user"`
	IDPlan         sql.NullInt64 `json:"id_plan"`
	ExpirationDate time.Time     `json:"expiration_date"`
}

func (q *Queries) CreateUserPlans(ctx context.Context, arg CreateUserPlansParams) (UserPlan, error) {
	row := q.db.QueryRowContext(ctx, createUserPlans, arg.IDUser, arg.IDPlan, arg.ExpirationDate)
	var i UserPlan
	err := row.Scan(
		&i.ID,
		&i.IDUser,
		&i.IDPlan,
		&i.Active,
		&i.ActiveDate,
		&i.ExpirationDate,
	)
	return i, err
}
