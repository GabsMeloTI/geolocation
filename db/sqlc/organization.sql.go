// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: organization.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const getOrganizationByTenant = `-- name: GetOrganizationByTenant :one
SELECT postcode
FROM "Organizations"
WHERE access_id=$1 AND
      tenant_id=$2 AND
      CNPJ=$3
`

type GetOrganizationByTenantParams struct {
	AccessID sql.NullInt64 `json:"access_id"`
	TenantID uuid.NullUUID `json:"tenant_id"`
	Cnpj     string        `json:"cnpj"`
}

func (q *Queries) GetOrganizationByTenant(ctx context.Context, arg GetOrganizationByTenantParams) (sql.NullString, error) {
	row := q.db.QueryRowContext(ctx, getOrganizationByTenant, arg.AccessID, arg.TenantID, arg.Cnpj)
	var postcode sql.NullString
	err := row.Scan(&postcode)
	return postcode, err
}
