// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: freight_load.sql

package db

import (
	"context"
)

const getFreightLoadAll = `-- name: GetFreightLoadAll :many
SELECT type_of_load, two_axes, three_axes, four_axes, five_axes, six_axes, seven_axes, nine_axes, name, description
FROM public.freight_load
`

func (q *Queries) GetFreightLoadAll(ctx context.Context) ([]FreightLoad, error) {
	rows, err := q.db.QueryContext(ctx, getFreightLoadAll)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []FreightLoad
	for rows.Next() {
		var i FreightLoad
		if err := rows.Scan(
			&i.TypeOfLoad,
			&i.TwoAxes,
			&i.ThreeAxes,
			&i.FourAxes,
			&i.FiveAxes,
			&i.SixAxes,
			&i.SevenAxes,
			&i.NineAxes,
			&i.Name,
			&i.Description,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
