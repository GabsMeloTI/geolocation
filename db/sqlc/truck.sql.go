// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: truck.sql

package db

import (
	"context"
	"database/sql"
)

const createTruck = `-- name: CreateTruck :one
INSERT INTO public.truck
(id, tractor_unit_id, trailer_id, driver_id)
VALUES(nextval('truck_id_seq'::regclass), $1, $2, $3)
    RETURNING id, tractor_unit_id, trailer_id, driver_id
`

type CreateTruckParams struct {
	TractorUnitID int64         `json:"tractor_unit_id"`
	TrailerID     sql.NullInt64 `json:"trailer_id"`
	DriverID      int64         `json:"driver_id"`
}

func (q *Queries) CreateTruck(ctx context.Context, arg CreateTruckParams) (Truck, error) {
	row := q.db.QueryRowContext(ctx, createTruck, arg.TractorUnitID, arg.TrailerID, arg.DriverID)
	var i Truck
	err := row.Scan(
		&i.ID,
		&i.TractorUnitID,
		&i.TrailerID,
		&i.DriverID,
	)
	return i, err
}
