{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/address/city/{idState}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all cities in a specific state by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Find All Cities by State ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "State ID",
                        "name": "idState",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Cities",
                        "schema": {
                            "$ref": "#/definitions/address.CityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Find address by search, it can be 1. And, 2. Latitude, Longitude or 3. Address (Street, neighborhood, number).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Find Address By Query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address Info",
                        "schema": {
                            "$ref": "#/definitions/address.AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find/:cep": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Finds address by zip code, returns type based on repetitions found",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Find Address By CEP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cep",
                        "name": "CEP",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address Info",
                        "schema": {
                            "$ref": "#/definitions/address.AddressCEPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/state": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns all available states.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Find All States",
                "responses": {
                    "200": {
                        "description": "List of States",
                        "schema": {
                            "$ref": "#/definitions/address.StateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Create a Advertisement.",
                "parameters": [
                    {
                        "description": "Advertisement Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.CreateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertisement Info",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Delete Advertisement.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advertisement id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all Advertisement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get All Advertisement",
                "responses": {
                    "200": {
                        "description": "List of Advertisement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseAll"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/route": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the route choosen in the advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Update Advertisement Route Choose",
                "parameters": [
                    {
                        "description": "Advertisement Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.UpdateAdsRouteChooseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Update a Advertisement.",
                "parameters": [
                    {
                        "description": "Advertisement Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.UpdateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertisement Info",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/delete/{id}": {
            "put": {
                "description": "Delete Appointment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete Appointment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an Appointment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointments"
                ],
                "summary": "Update an Appointment.",
                "parameters": [
                    {
                        "description": "Appointment Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.UpdateAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/{id}": {
            "get": {
                "description": "Get list Appointment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Appointments"
                ],
                "summary": "Get list Appointment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment Info",
                        "schema": {
                            "$ref": "#/definitions/appointments.AppointmentResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark an existing attachment as inactive and create a new record with the provided file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Update Attachment (Logical Delete and Replace)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "New attachment file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Attach.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Create Attach.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "File to upload. Only accepts .jpg, .jpeg, .png, and .pdf files.",
                        "name": "files_input",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CodeID",
                        "name": "code_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attachment/list/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Attachment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Get Attachment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/create-room": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a chat room associated with an advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Create a new chat room.",
                "parameters": [
                    {
                        "description": "Chat Room Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ws.CreateChatRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat Room Info",
                        "schema": {
                            "$ref": "#/definitions/ws.CreateChatRoomResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/messages/:room_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches chat messages by the specified room ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Retrieve messages from a chat room.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat Room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of chat messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ws.MessageResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-route-tolls-coordinate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculates the best routes based on provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calculate possible routes.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfoCoordinate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated Routes Info",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user.",
                "parameters": [
                    {
                        "description": "User Creation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created User Info",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create/client": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new user client in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user client.",
                "parameters": [
                    {
                        "description": "User Creation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created User Info",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Create a Driver.",
                "parameters": [
                    {
                        "description": "Driver Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.CreateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Info",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/delete/{id}": {
            "put": {
                "description": "Delete Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Delete Driver.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/list": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Get Driver.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Info",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Update a Driver.",
                "parameters": [
                    {
                        "description": "Driver Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.UpdateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Info",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Authenticate a user by email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Authenticate a user.",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authenticated User Info",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payment-history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches the payment history for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve Payment History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Payment History",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment.PaymentHistResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/advertisement/list": {
            "get": {
                "description": "Retrieve all Advertisement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get By ID Advertisement",
                "responses": {
                    "200": {
                        "description": "List of Advertisement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseNoUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/check-route-tolls": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculates the best routes based on provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calculate possible routes.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated Routes Info",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get FavoriteRoute.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FavoriteRoutes"
                ],
                "summary": "Get FavoriteRoute.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite Route Info",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/remove/:id": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get FavoriteRoute.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "FavoriteRoutes"
                ],
                "summary": "Get FavoriteRoute.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/simple": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a simple route with distance and duration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Get simple route information.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route details",
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Create a TractorUnit.",
                "parameters": [
                    {
                        "description": "TractorUnit Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.CreateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TractorUnit Info",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Delete TractorUnit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TractorUnit id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Tractor Unit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Get Tractor Unit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TractorUnit id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/list/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Tractor Unit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailers"
                ],
                "summary": "Get Tractor Unit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Update a TractorUnit.",
                "parameters": [
                    {
                        "description": "TractorUnit Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.UpdateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TractorUnit Info",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Create a Trailer.",
                "parameters": [
                    {
                        "description": "Trailer Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.CreateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trailer Info",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Delete Trailer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/list": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Get Trailer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Update a Trailer.",
                "parameters": [
                    {
                        "description": "Trailer Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.UpdateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trailer Info",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/address/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the address details of a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Address.",
                "parameters": [
                    {
                        "description": "User Address Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Address Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes the authenticated user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User.",
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all user data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User Info.",
                "responses": {
                    "200": {
                        "description": "Get User ",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/personal/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the personal details of a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Personal Info.",
                "parameters": [
                    {
                        "description": "User Personal Info Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserPersonalInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Personal Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/plan": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Assigns a user to a selected plan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a User Plan.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Plan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Plan Info",
                        "schema": {
                            "$ref": "#/definitions/plans.UserPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the authenticated user’s profile information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Information.",
                "parameters": [
                    {
                        "description": "User Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated User Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webhook/stripe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Receives and processes Stripe webhook events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Process Stripe Webhook",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Establishes a WebSocket connection for real-time communication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Handle WebSocket connection.",
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.AddressCEPResponse": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "neighborhood_name": {
                    "type": "string"
                },
                "state_uf": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "address.AddressDetail": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "id_address": {
                    "type": "integer"
                },
                "is_exactly": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "address.AddressResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.AddressDetail"
                    }
                },
                "city": {
                    "type": "string"
                },
                "id_street": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "address.CityResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "address.StateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponse": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseAll": {
            "type": "object",
            "properties": {
                "active_duration": {
                    "type": "string"
                },
                "active_freight": {
                    "type": "integer"
                },
                "active_there": {
                    "type": "string"
                },
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "route_choose": {
                    "$ref": "#/definitions/new_routes.RouteOutput"
                },
                "route_index_choose": {
                    "type": "integer"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_city": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                },
                "user_state": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseNoUser": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.CreateAdvertisementRequest": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.UpdateAdsRouteChooseRequest": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "new_route": {
                    "type": "integer"
                }
            }
        },
        "advertisement.UpdateAdvertisementRequest": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "appointments.AppointmentResponseList": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "truck_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "appointments.UpdateAppointmentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "situation": {
                    "type": "string"
                }
            }
        },
        "dashboard.Calendar": {
            "type": "object",
            "properties": {
                "date_pickup": {
                    "type": "string"
                },
                "situation": {
                    "type": "string"
                },
                "time_pickup": {
                    "type": "string"
                }
            }
        },
        "dashboard.DriverEnterprise": {
            "type": "object",
            "properties": {
                "disponibilidade": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reces_finished": {
                    "type": "integer"
                }
            }
        },
        "dashboard.FreightHistory": {
            "type": "object",
            "properties": {
                "date_delivery": {
                    "type": "string"
                },
                "freight": {
                    "type": "integer"
                },
                "name_enterprise": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "time_delivery": {
                    "type": "string"
                }
            }
        },
        "dashboard.FutureFreights": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "date_pickup": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "time_pickup": {
                    "type": "string"
                }
            }
        },
        "dashboard.MonthlyBilling": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "integer"
                },
                "total_billed": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dashboard.Response": {
            "type": "object",
            "properties": {
                "calendar": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.Calendar"
                    }
                },
                "comparison_previous_month_customers_served": {
                    "type": "number"
                },
                "comparison_previous_month_proposals": {
                    "type": "number"
                },
                "comparison_previous_month_total_freight": {
                    "type": "number"
                },
                "customers_served": {
                    "type": "integer"
                },
                "driver_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.DriverEnterprise"
                    }
                },
                "driver_id": {
                    "type": "integer"
                },
                "freight_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.FreightHistory"
                    }
                },
                "future_freights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.FutureFreights"
                    }
                },
                "monthly_billing": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.MonthlyBilling"
                    }
                },
                "proposals": {
                    "type": "integer"
                },
                "total_freight_completed": {
                    "type": "number"
                },
                "total_receivable": {
                    "type": "number"
                },
                "tract_unit_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.TractUnitEnterprise"
                    }
                },
                "trailer_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.TrailerEnterprise"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dashboard.TractUnitEnterprise": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string"
                }
            }
        },
        "dashboard.TrailerEnterprise": {
            "type": "object",
            "properties": {
                "body_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "load_capacity": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "drivers.CreateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "drivers.DriverResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string"
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "drivers.UpdateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "login.RequestCreateUser": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "telephone",
                "type_person"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type_person": {
                    "type": "integer"
                }
            }
        },
        "login.RequestLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "login.ResponseCreateUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "login.ResponseLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "new_routes.AddressInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                }
            }
        },
        "new_routes.ArrivalResponse": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "new_routes.Coordinate": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "string"
                },
                "lng": {
                    "type": "string"
                }
            }
        },
        "new_routes.Costs": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "cash": {
                    "type": "number"
                },
                "fuel_in_the_city": {
                    "type": "number"
                },
                "fuel_in_the_hwy": {
                    "type": "number"
                },
                "maximumTollCost": {
                    "type": "number"
                },
                "minimumTollCost": {
                    "type": "number"
                },
                "prepaidCard": {
                    "type": "number"
                },
                "tag": {
                    "type": "number"
                },
                "tagAndCash": {
                    "type": "number"
                }
            }
        },
        "new_routes.Distance": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.Duration": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.FinalOutput": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.RouteOutput"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.Summary"
                }
            }
        },
        "new_routes.FrontInfo": {
            "type": "object",
            "required": [
                "destination",
                "origin",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "new_routes.FrontInfoCoordinate": {
            "type": "object",
            "required": [
                "destination_lat",
                "destination_lng",
                "origin_lat",
                "origin_lng",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination_lat": {
                    "type": "string"
                },
                "destination_lng": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin_lat": {
                    "type": "string"
                },
                "origin_lng": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Coordinate"
                    }
                }
            }
        },
        "new_routes.FuelEfficiency": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "number"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "hwy": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.FuelPrice": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.GasStation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "new_routes.Instruction": {
            "type": "object",
            "properties": {
                "img": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "new_routes.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "new_routes.RouteOptions": {
            "type": "object",
            "properties": {
                "include_freight_calc": {
                    "description": "Se deve calcular frete",
                    "type": "boolean"
                },
                "include_fuel_stations": {
                    "description": "Se deve incluir postos de combustível",
                    "type": "boolean"
                },
                "include_polyline": {
                    "description": "Se deve retornar polyline",
                    "type": "boolean"
                },
                "include_route_map": {
                    "description": "Se deve incluir rotograma",
                    "type": "boolean"
                },
                "include_toll_costs": {
                    "description": "Se deve incluir pedágios",
                    "type": "boolean"
                },
                "include_weigh_stations": {
                    "description": "Se deve incluir balanças",
                    "type": "boolean"
                }
            }
        },
        "new_routes.RouteOutput": {
            "type": "object",
            "properties": {
                "balances": {},
                "costs": {
                    "$ref": "#/definitions/new_routes.Costs"
                },
                "freight_load": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gas_stations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.GasStation"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Instruction"
                    }
                },
                "polyline": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.RouteSummary"
                },
                "tolls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Toll"
                    }
                }
            }
        },
        "new_routes.RouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                },
                "hasTolls": {
                    "type": "boolean"
                },
                "route_type": {
                    "type": "string"
                },
                "total_fuel_cost": {
                    "type": "number"
                },
                "url": {
                    "type": "string"
                },
                "url_waze": {
                    "type": "string"
                }
            }
        },
        "new_routes.SimpleRouteRequest": {
            "type": "object",
            "properties": {
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                }
            }
        },
        "new_routes.SimpleRouteResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/definitions/new_routes.SimpleSummary"
                }
            }
        },
        "new_routes.SimpleRouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                }
            }
        },
        "new_routes.SimpleSummary": {
            "type": "object",
            "properties": {
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "routes": {
                    "$ref": "#/definitions/new_routes.SimpleRouteSummary"
                }
            }
        },
        "new_routes.Summary": {
            "type": "object",
            "properties": {
                "all_stopping_points": {
                    "type": "array",
                    "items": {}
                },
                "fuel_efficiency": {
                    "$ref": "#/definitions/new_routes.FuelEfficiency"
                },
                "fuel_price": {
                    "$ref": "#/definitions/new_routes.FuelPrice"
                },
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "route_hist_id": {
                    "type": "integer"
                }
            }
        },
        "new_routes.Toll": {
            "type": "object",
            "properties": {
                "arrival": {
                    "$ref": "#/definitions/new_routes.ArrivalResponse"
                },
                "cashCost": {
                    "type": "number"
                },
                "concession": {
                    "type": "string"
                },
                "concession_img": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "free_flow": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "pay_free_flow": {
                    "type": "string"
                },
                "prepaidCardCost": {
                    "type": "number"
                },
                "road": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tagCost": {
                    "type": "number"
                },
                "tagImg": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPrimary": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "payment.PaymentHistResponse": {
            "type": "object",
            "properties": {
                "automatic": {
                    "type": "boolean"
                },
                "currency": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "invoice": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_expireted": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "plans.UserPlanResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "active_date": {
                    "type": "string"
                },
                "annual": {
                    "type": "boolean"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_plan": {
                    "type": "integer"
                },
                "id_user": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.CreateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "can_couple": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string",
                    "enum": [
                        "stump",
                        "truck",
                        "tractor_unit"
                    ]
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.TractorUnitResponse": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "can_couple": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "unit_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.UpdateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.CreateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.TrailerResponse": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.UpdateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string",
                    "enum": [
                        "open",
                        "chest",
                        "bulk_carrier",
                        "sider"
                    ]
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "user.GetUserResponse": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "secondary_contact": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserAddressRequest": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserPersonalInfoRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "secondary_contact": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "ws.CreateChatRoomRequest": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                }
            }
        },
        "ws.CreateChatRoomResponse": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "advertisement_user_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interested_user_id": {
                    "type": "integer"
                }
            }
        },
        "ws.MessageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "message_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "type_message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    }
}