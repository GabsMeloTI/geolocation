{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Document API",
        "title": "GO-auth-service",
        "contact": {
            "name": "API Support",
            "url": "https://simpplify.com.br/contact",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "paths": {
        "/address/find": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Busca um endereço por pesquisa, que pode ser: 1. E, 2. Latitude e Longitude ou 3. Endereço (Rua, bairro, número).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Endereço por Consulta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consulta de endereço",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informação do endereço",
                        "schema": {
                            "$ref": "#/definitions/address.AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find/cep/{cep}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Encontra um endereço pelo CEP, retornando o tipo com base nas repetições encontradas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Busca um endereço pelo CEP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "cep",
                        "name": "CEP",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informação do endereço",
                        "schema": {
                            "$ref": "#/definitions/address.AddressCEPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/states": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna todos os estados dísponíveis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Busca todos os estados.",
                "responses": {
                    "200": {
                        "description": "Lista dos estados",
                        "schema": {
                            "$ref": "#/definitions/address.StateResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/{idState}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna todas as cidades de um determinado estado pelo seu ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Address"
                ],
                "summary": "Busca todas as cidades pelo ID do estado.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "State ID",
                        "name": "idState",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista das cidades.",
                        "schema": {
                            "$ref": "#/definitions/address.CityResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um usuário gerando um token para acessar as funcionalidades do sistema.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Realiza a criação de um novo usuário no sistema.",
                "parameters": [
                    {
                        "description": "Informações necessárias para a criação do usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created User Info",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create/client": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um cliente gerando um token para acessar as funcionalidades",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Realiza a criação de um novo cliente no sistema.",
                "parameters": [
                    {
                        "description": "Informações necessárias para a criação do cliente",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created User Info",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Realiza a autenticação do usuário com o sistema.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Autenticação do usuário",
                "parameters": [
                    {
                        "description": "Campos necessários para o login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token de acesso ao sistema",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/check-route-tolls": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculates the best routes based on provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calculate possible routes.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calculated Routes Info",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna um array com todas as rotas favoritadas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rotas Favoritas"
                ],
                "summary": "Consulta as rotas favoritadas.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna um array com as rotas favoritadas.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/remove/:id": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "A rota favoritada no id informado da requisição é deletada.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rotas Favoritas"
                ],
                "summary": "Realiza a exclusão da rota favoritada.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/simple": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a simple route with distance and duration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Get simple route information.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route details",
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.AddressCEPResponse": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "neighborhood_name": {
                    "type": "string"
                },
                "state_uf": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "address.AddressDetail": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "id_address": {
                    "type": "integer"
                },
                "is_exactly": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "address.AddressResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.AddressDetail"
                    }
                },
                "city": {
                    "type": "string"
                },
                "id_street": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "address.CityResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "address.StateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                }
            }
        },
        "login.RequestCreateUser": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "telephone",
                "type_person"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "type_person": {
                    "type": "integer"
                }
            }
        },
        "login.RequestLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "login.ResponseCreateUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "login.ResponseLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "new_routes.AddressInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                }
            }
        },
        "new_routes.ArrivalResponse": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "new_routes.Costs": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "cash": {
                    "type": "number"
                },
                "fuel_in_the_city": {
                    "type": "number"
                },
                "fuel_in_the_hwy": {
                    "type": "number"
                },
                "maximumTollCost": {
                    "type": "number"
                },
                "minimumTollCost": {
                    "type": "number"
                },
                "prepaidCard": {
                    "type": "number"
                },
                "tag": {
                    "type": "number"
                },
                "tagAndCash": {
                    "type": "number"
                }
            }
        },
        "new_routes.Distance": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.Duration": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.FinalOutput": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.RouteOutput"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.Summary"
                }
            }
        },
        "new_routes.FrontInfo": {
            "type": "object",
            "required": [
                "destination",
                "origin",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "new_routes.FuelEfficiency": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "number"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "hwy": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.FuelPrice": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.GasStation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "new_routes.Instruction": {
            "type": "object",
            "properties": {
                "img": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "new_routes.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "new_routes.RouteOutput": {
            "type": "object",
            "properties": {
                "balances": {},
                "costs": {
                    "$ref": "#/definitions/new_routes.Costs"
                },
                "freight_load": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gas_stations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.GasStation"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Instruction"
                    }
                },
                "polyline": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.RouteSummary"
                },
                "tolls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Toll"
                    }
                }
            }
        },
        "new_routes.RouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                },
                "hasTolls": {
                    "type": "boolean"
                },
                "route_type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "url_waze": {
                    "type": "string"
                }
            }
        },
        "new_routes.SimpleRouteRequest": {
            "type": "object",
            "properties": {
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                }
            }
        },
        "new_routes.SimpleRouteResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/definitions/new_routes.SimpleSummary"
                }
            }
        },
        "new_routes.SimpleRouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                }
            }
        },
        "new_routes.SimpleSummary": {
            "type": "object",
            "properties": {
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "routes": {
                    "$ref": "#/definitions/new_routes.SimpleRouteSummary"
                }
            }
        },
        "new_routes.Summary": {
            "type": "object",
            "properties": {
                "all_stopping_points": {
                    "type": "array",
                    "items": {}
                },
                "fuel_efficiency": {
                    "$ref": "#/definitions/new_routes.FuelEfficiency"
                },
                "fuel_price": {
                    "$ref": "#/definitions/new_routes.FuelPrice"
                },
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "route_hist_id": {
                    "type": "integer"
                }
            }
        },
        "new_routes.Toll": {
            "type": "object",
            "properties": {
                "arrival": {
                    "$ref": "#/definitions/new_routes.ArrivalResponse"
                },
                "cashCost": {
                    "type": "number"
                },
                "concession": {
                    "type": "string"
                },
                "concession_img": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "free_flow": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "pay_free_flow": {
                    "type": "string"
                },
                "prepaidCardCost": {
                    "type": "number"
                },
                "road": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tagCost": {
                    "type": "number"
                },
                "tagImg": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPrimary": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}