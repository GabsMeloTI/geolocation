definitions:
  advertisement.AdvertisementResponse:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      created_at:
        type: string
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      id:
        type: integer
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      requires_tarp:
        type: boolean
      situation:
        type: string
      status:
        type: boolean
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      updated_at:
        type: string
      updated_who:
        type: string
      user_id:
        type: integer
      vehicles_accepted:
        type: string
    type: object
  advertisement.AdvertisementResponseAll:
    properties:
      active_duration:
        type: string
      active_freight:
        type: integer
      active_there:
        type: string
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      created_at:
        type: string
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      id:
        type: integer
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      requires_tarp:
        type: boolean
      situation:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      updated_at:
        type: string
      updated_who:
        type: string
      user_city:
        type: string
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_phone:
        type: string
      user_state:
        type: string
      vehicles_accepted:
        type: string
    type: object
  advertisement.AdvertisementResponseNoUser:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      created_at:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      expiration_date:
        type: string
      id:
        type: integer
      origin:
        type: string
      payment_type:
        type: string
      pickup_date:
        type: string
      requires_tarp:
        type: boolean
      situation:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      vehicles_accepted:
        type: string
    type: object
  advertisement.CreateAdvertisementRequest:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      requires_tarp:
        type: boolean
      situation:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      user_id:
        type: integer
      vehicles_accepted:
        type: string
    type: object
  advertisement.UpdateAdvertisementRequest:
    type: object
  drivers.CreateDriverRequest:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      license_category:
        enum:
        - a
        - b
        - c
        - d
        - e
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
      user_id:
        type: integer
    type: object
  drivers.DriverResponse:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      created_at:
        type: string
      id:
        type: integer
      license_category:
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      status:
        type: boolean
      street:
        type: string
      street_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  drivers.UpdateDriverRequest:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      id:
        type: integer
      license_category:
        enum:
        - a
        - b
        - c
        - d
        - e
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
      user_id:
        type: integer
    type: object
  tractor_unit.CreateTractorUnitRequest:
    properties:
      brand:
        type: string
      can_couple:
        type: boolean
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      unit_type:
        enum:
        - stump
        - truck
        - tractor_unit
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  tractor_unit.TractorUnitResponse:
    properties:
      brand:
        type: string
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      created_at:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      status:
        type: boolean
      unit_type:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  tractor_unit.UpdateTractorUnitRequest:
    properties:
      brand:
        type: string
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      unit_type:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  trailer.CreateTrailerRequest:
    properties:
      axles:
        type: integer
      body_type:
        type: string
      chassis:
        type: string
      height:
        type: number
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  trailer.TrailerResponse:
    properties:
      axles:
        type: integer
      body_type:
        type: string
      chassis:
        type: string
      created_at:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      status:
        type: boolean
      updated_at:
        type: string
      userId:
        type: integer
      width:
        type: number
    type: object
  trailer.UpdateTrailerRequest:
    properties:
      axles:
        type: integer
      body_type:
        enum:
        - open
        - chest
        - bulk_carrier
        - sider
        type: string
      chassis:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      userId:
        type: integer
      width:
        type: number
    type: object
  user.CreateUserRequest:
    properties:
      confirm_password:
        type: string
      document:
        type: string
      email:
        type: string
      google_id:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      profile_id:
        type: integer
      profile_picture:
        type: string
      provider:
        type: string
    required:
    - document
    - email
    - name
    - phone
    - profile_id
    type: object
  user.CreateUserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
      provider:
        type: string
    type: object
  user.LoginUserResponse:
    properties:
      document:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      profile_id:
        type: integer
      profile_picture:
        type: string
      token:
        type: string
    type: object
  user.UpdateUserAddressRequest:
    properties:
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      id:
        type: integer
      neighborhood:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  user.UpdateUserPersonalInfoRequest:
    properties:
      document:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      city:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      profile_picture:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  user.UpdateUserResponse:
    properties:
      city:
        type: string
      document:
        type: string
      email:
        type: string
      google_id:
        type: string
      id:
        type: integer
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      profile_id:
        type: integer
      profile_picture:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
info:
  contact: {}
paths:
  /advertisement/create:
    post:
      consumes:
      - application/json
      description: Create a Advertisement.
      parameters:
      - description: Advertisement Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/advertisement.CreateAdvertisementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Advertisement Info
          schema:
            $ref: '#/definitions/advertisement.AdvertisementResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Advertisement.
      tags:
      - Advertisement
  /advertisement/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Advertisement.
      parameters:
      - description: Advertisement id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Advertisement.
      tags:
      - Advertisement
  /advertisement/list:
    get:
      consumes:
      - application/json
      description: Retrieve all Advertisement
      produces:
      - application/json
      responses:
        "200":
          description: List of Advertisement
          schema:
            items:
              $ref: '#/definitions/advertisement.AdvertisementResponseAll'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Advertisement
      tags:
      - Advertisement
  /advertisement/list/public:
    get:
      consumes:
      - application/json
      description: Retrieve all Advertisement
      produces:
      - application/json
      responses:
        "200":
          description: List of Advertisement
          schema:
            items:
              $ref: '#/definitions/advertisement.AdvertisementResponseNoUser'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Advertisement
      tags:
      - Advertisement
  /advertisement/update:
    put:
      consumes:
      - application/json
      description: Update a Advertisement.
      parameters:
      - description: Advertisement Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/advertisement.UpdateAdvertisementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Advertisement Info
          schema:
            $ref: '#/definitions/advertisement.AdvertisementResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Advertisement.
      tags:
      - Advertisement
  /attach/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an attachment logically (update status and remove file from
        bucket).
      parameters:
      - description: Attachment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Attachment (Logical)
      tags:
      - Attach
  /attach/upload:
    post:
      consumes:
      - multipart/form-data
      description: Create Attach.
      parameters:
      - collectionFormat: csv
        description: File to upload. Only accepts .jpg, .jpeg, .png, and .pdf files.
        in: formData
        items:
          type: file
        name: files_input
        required: true
        type: array
      - description: CodeID
        in: formData
        name: code_id
        required: true
        type: string
      - description: Origin
        in: formData
        name: origin
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Attach.
      tags:
      - Attach
  /driver/create:
    post:
      consumes:
      - application/json
      description: Create a Driver.
      parameters:
      - description: Driver Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/drivers.CreateDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Driver Info
          schema:
            $ref: '#/definitions/drivers.DriverResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Driver.
      tags:
      - Drivers
  /driver/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Driver.
      parameters:
      - description: Driver id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Driver.
      tags:
      - Drivers
  /driver/update:
    put:
      consumes:
      - application/json
      description: Update a Driver.
      parameters:
      - description: Driver Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/drivers.UpdateDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Driver Info
          schema:
            $ref: '#/definitions/drivers.DriverResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Driver.
      tags:
      - Drivers
  /tractor-unit/create:
    post:
      consumes:
      - application/json
      description: Create a TractorUnit.
      parameters:
      - description: TractorUnit Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tractor_unit.CreateTractorUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: TractorUnit Info
          schema:
            $ref: '#/definitions/tractor_unit.TractorUnitResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a TractorUnit.
      tags:
      - TractorUnits
  /tractor-unit/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete TractorUnit.
      parameters:
      - description: TractorUnit id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete TractorUnit.
      tags:
      - TractorUnits
  /tractor-unit/update:
    put:
      consumes:
      - application/json
      description: Update a TractorUnit.
      parameters:
      - description: TractorUnit Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/tractor_unit.UpdateTractorUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: TractorUnit Info
          schema:
            $ref: '#/definitions/tractor_unit.TractorUnitResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a TractorUnit.
      tags:
      - TractorUnits
  /trailer/create:
    post:
      consumes:
      - application/json
      description: Create a Trailer.
      parameters:
      - description: Trailer Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/trailer.CreateTrailerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trailer Info
          schema:
            $ref: '#/definitions/trailer.TrailerResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Trailer.
      tags:
      - Trailer
  /trailer/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Trailer.
      parameters:
      - description: Trailer id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Trailer.
      tags:
      - Trailer
  /trailer/update:
    put:
      consumes:
      - application/json
      description: Update a Trailer.
      parameters:
      - description: Trailer Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/trailer.UpdateTrailerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trailer Info
          schema:
            $ref: '#/definitions/trailer.TrailerResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Trailer.
      tags:
      - Trailer
  /user/address:
    put:
      consumes:
      - application/json
      description: Updates the address details of a user.
      parameters:
      - description: User Address Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Address Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Address.
      tags:
      - Users
  /user/create:
    post:
      consumes:
      - application/json
      description: Create a new user with email, password, and profile details.
      parameters:
      - description: User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Info
          schema:
            $ref: '#/definitions/user.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a User.
      tags:
      - Users
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the authenticated user account.
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a User.
      tags:
      - Users
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password or Google authentication.
      parameters:
      - description: User Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Info with Token
          schema:
            $ref: '#/definitions/user.LoginUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User login.
      tags:
      - Users
  /user/personal-info:
    put:
      consumes:
      - application/json
      description: Updates the personal details of a user.
      parameters:
      - description: User Personal Info Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserPersonalInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Personal Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Personal Info.
      tags:
      - Users
  /user/update:
    put:
      consumes:
      - application/json
      description: Update the authenticated user’s profile information.
      parameters:
      - description: User Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated User Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Information.
      tags:
      - Users
swagger: "2.0"
