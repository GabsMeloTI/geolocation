definitions:
  advertisement.AdvertisementResponse:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      cep_destination:
        type: string
      cep_origin:
        type: string
      city_destination:
        type: string
      city_origin:
        type: string
      complement_destination:
        type: string
      complement_origin:
        type: string
      created_at:
        type: string
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      id:
        type: integer
      neighborhood_destination:
        type: string
      neighborhood_origin:
        type: string
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      price:
        type: number
      requires_tarp:
        type: boolean
      situation:
        type: string
      state_destination:
        type: string
      state_origin:
        type: string
      status:
        type: boolean
      street_destination:
        type: string
      street_number_destination:
        type: string
      street_number_origin:
        type: string
      street_origin:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      updated_at:
        type: string
      updated_who:
        type: string
      user_id:
        type: integer
      vehicles_accepted:
        type: string
    type: object
  advertisement.AdvertisementResponseAll:
    properties:
      active_duration:
        type: string
      active_freight:
        type: integer
      active_there:
        type: string
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      cep_destination:
        type: string
      cep_origin:
        type: string
      city_destination:
        type: string
      city_origin:
        type: string
      complement_destination:
        type: string
      complement_origin:
        type: string
      created_at:
        type: string
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      id:
        type: integer
      neighborhood_destination:
        type: string
      neighborhood_origin:
        type: string
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      price:
        type: number
      requires_tarp:
        type: boolean
      situation:
        type: string
      state_destination:
        type: string
      state_origin:
        type: string
      street_destination:
        type: string
      street_number_destination:
        type: string
      street_number_origin:
        type: string
      street_origin:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      updated_at:
        type: string
      updated_who:
        type: string
      user_city:
        type: string
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_phone:
        type: string
      user_state:
        type: string
      vehicles_accepted:
        type: string
    type: object
  advertisement.AdvertisementResponseNoUser:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      cep_destination:
        type: string
      cep_origin:
        type: string
      city_destination:
        type: string
      city_origin:
        type: string
      complement_destination:
        type: string
      complement_origin:
        type: string
      created_at:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      expiration_date:
        type: string
      id:
        type: integer
      neighborhood_destination:
        type: string
      neighborhood_origin:
        type: string
      origin:
        type: string
      payment_type:
        type: string
      pickup_date:
        type: string
      requires_tarp:
        type: boolean
      situation:
        type: string
      state_destination:
        type: string
      state_origin:
        type: string
      street_destination:
        type: string
      street_number_destination:
        type: string
      street_number_origin:
        type: string
      street_origin:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      vehicles_accepted:
        type: string
    type: object
  advertisement.CreateAdvertisementRequest:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      cep_destination:
        type: string
      cep_origin:
        type: string
      city_destination:
        type: string
      city_origin:
        type: string
      complement_destination:
        type: string
      complement_origin:
        type: string
      created_who:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      neighborhood_destination:
        type: string
      neighborhood_origin:
        type: string
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      price:
        type: number
      requires_tarp:
        type: boolean
      situation:
        type: string
      state_destination:
        type: string
      state_origin:
        type: string
      street_destination:
        type: string
      street_number_destination:
        type: string
      street_number_origin:
        type: string
      street_origin:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      vehicles_accepted:
        type: string
    type: object
  advertisement.UpdateAdvertisementRequest:
    properties:
      advance:
        type: string
      agency:
        type: boolean
      cargo_species:
        type: string
      cargo_type:
        type: string
      cargo_weight:
        type: number
      cep_destination:
        type: string
      cep_origin:
        type: string
      city_destination:
        type: string
      city_origin:
        type: string
      complement_destination:
        type: string
      complement_origin:
        type: string
      delivery_date:
        type: string
      description:
        type: string
      destination:
        type: string
      destination_lat:
        type: number
      destination_lng:
        type: number
      distance:
        type: integer
      expiration_date:
        type: string
      id:
        type: integer
      neighborhood_destination:
        type: string
      neighborhood_origin:
        type: string
      origin:
        type: string
      origin_lat:
        type: number
      origin_lng:
        type: number
      payment_type:
        type: string
      pickup_date:
        type: string
      price:
        type: number
      requires_tarp:
        type: boolean
      situation:
        type: string
      state_destination:
        type: string
      state_origin:
        type: string
      street_destination:
        type: string
      street_number_destination:
        type: string
      street_number_origin:
        type: string
      street_origin:
        type: string
      title:
        type: string
      toll:
        type: boolean
      tracking:
        type: boolean
      trailer:
        type: string
      vehicles_accepted:
        type: string
    type: object
  appointments.AppointmentResponseList:
    properties:
      advertisement_id:
        type: integer
      created_at:
        type: string
      created_who:
        type: string
      id:
        type: integer
      status:
        type: boolean
      truck_id:
        type: integer
      updated_at:
        type: string
      updated_who:
        type: string
      user_id:
        type: integer
    type: object
  appointments.UpdateAppointmentRequest:
    properties:
      id:
        type: integer
      situation:
        type: string
    type: object
  drivers.CreateDriverRequest:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      license_category:
        enum:
        - a
        - b
        - c
        - d
        - e
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  drivers.DriverResponse:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      created_at:
        type: string
      id:
        type: integer
      license_category:
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      status:
        type: boolean
      street:
        type: string
      street_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  drivers.UpdateDriverRequest:
    properties:
      birth_date:
        type: string
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      cpf:
        type: string
      id:
        type: integer
      license_category:
        enum:
        - a
        - b
        - c
        - d
        - e
        type: string
      license_expiration_date:
        type: string
      license_number:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  geolocation_internal_new_routes.ArrivalResponse:
    properties:
      distance:
        type: string
      time:
        type: string
    type: object
  geolocation_internal_new_routes.Costs:
    properties:
      axles:
        type: integer
      cash:
        type: number
      fuel_in_the_city:
        type: number
      fuel_in_the_hwy:
        type: number
      maximumTollCost:
        type: number
      minimumTollCost:
        type: number
      prepaidCard:
        type: number
      tag:
        type: number
      tagAndCash:
        type: number
    type: object
  geolocation_internal_new_routes.Distance:
    properties:
      text:
        type: string
      value:
        type: number
    type: object
  geolocation_internal_new_routes.Duration:
    properties:
      text:
        type: string
      value:
        type: number
    type: object
  geolocation_internal_new_routes.FrontInfo:
    properties:
      axles:
        type: integer
      consumptionCity:
        type: number
      consumptionHwy:
        type: number
      destination:
        type: string
      favorite:
        type: boolean
      origin:
        type: string
      price:
        type: number
      public_or_private:
        type: string
      type:
        enum:
        - Truck
        - Bus
        - Auto
        - Motorcycle
        - truck
        - bus
        - auto
        - motorcycle
        type: string
      typeRoute:
        type: string
      waypoints:
        items:
          type: string
        type: array
    required:
    - destination
    - origin
    - type
    type: object
  geolocation_internal_new_routes.FuelEfficiency:
    properties:
      city:
        type: number
      fuel_unit:
        type: string
      hwy:
        type: number
      units:
        type: string
    type: object
  geolocation_internal_new_routes.FuelPrice:
    properties:
      currency:
        type: string
      fuel_unit:
        type: string
      price:
        type: number
      units:
        type: string
    type: object
  geolocation_internal_new_routes.GasStation:
    properties:
      address:
        type: string
      location:
        $ref: '#/definitions/geolocation_internal_new_routes.Location'
      name:
        type: string
    type: object
  geolocation_internal_new_routes.Location:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  geolocation_internal_new_routes.Summary:
    properties:
      all_stopping_points:
        items: {}
        type: array
      fuel_efficiency:
        $ref: '#/definitions/geolocation_internal_new_routes.FuelEfficiency'
      fuel_price:
        $ref: '#/definitions/geolocation_internal_new_routes.FuelPrice'
      location_destination:
        $ref: '#/definitions/routes.AddressInfo'
      location_origin:
        $ref: '#/definitions/routes.AddressInfo'
    type: object
  geolocation_internal_new_routes.Toll:
    properties:
      arrival:
        $ref: '#/definitions/geolocation_internal_new_routes.ArrivalResponse'
      cashCost:
        type: number
      concession:
        type: string
      concession_img:
        type: string
      country:
        type: string
      currency:
        type: string
      free_flow:
        type: boolean
      id:
        type: integer
      lat:
        type: number
      lng:
        type: number
      name:
        type: string
      pay_free_flow:
        type: string
      prepaidCardCost:
        type: number
      road:
        type: string
      state:
        type: string
      tagCost:
        type: number
      tagImg:
        items:
          type: string
        type: array
      tagPrimary:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  login.RequestCreateUser:
    properties:
      confirm_password:
        type: string
      document:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      telephone:
        type: string
      token:
        type: string
      type_person:
        type: integer
    required:
    - document
    - email
    - name
    - telephone
    - type_person
    type: object
  login.RequestLogin:
    properties:
      password:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  login.ResponseCreateUser:
    properties:
      token:
        type: string
    type: object
  login.ResponseLogin:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      token:
        type: string
    type: object
  plans.UserPlanResponse:
    properties:
      active:
        type: boolean
      active_date:
        type: string
      annual:
        type: boolean
      expiration_date:
        type: string
      id:
        type: integer
      id_plan:
        type: integer
      id_user:
        type: integer
      price:
        type: number
    type: object
  routes.AddressInfo:
    properties:
      address:
        type: string
      location:
        $ref: '#/definitions/geolocation_internal_new_routes.Location'
    type: object
  routes.FinalOutput:
    properties:
      routes:
        items:
          $ref: '#/definitions/routes.RouteOutput'
        type: array
      summary:
        $ref: '#/definitions/geolocation_internal_new_routes.Summary'
    type: object
  routes.Instruction:
    properties:
      img:
        type: string
      text:
        type: string
    type: object
  routes.RouteOutput:
    properties:
      balances: {}
      costs:
        $ref: '#/definitions/geolocation_internal_new_routes.Costs'
      freight_load:
        additionalProperties: true
        type: object
      gas_stations:
        items:
          $ref: '#/definitions/geolocation_internal_new_routes.GasStation'
        type: array
      instructions:
        items:
          $ref: '#/definitions/routes.Instruction'
        type: array
      polyline:
        type: string
      summary:
        $ref: '#/definitions/routes.RouteSummary'
      tolls:
        items:
          $ref: '#/definitions/geolocation_internal_new_routes.Toll'
        type: array
    type: object
  routes.RouteSummary:
    properties:
      distance:
        $ref: '#/definitions/geolocation_internal_new_routes.Distance'
      duration:
        $ref: '#/definitions/geolocation_internal_new_routes.Duration'
      hasTolls:
        type: boolean
      route_type:
        type: string
      url:
        type: string
      url_waze:
        type: string
    type: object
  tractor_unit.CreateTractorUnitRequest:
    properties:
      brand:
        type: string
      can_couple:
        type: boolean
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      unit_type:
        enum:
        - stump
        - truck
        - tractor_unit
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  tractor_unit.TractorUnitResponse:
    properties:
      brand:
        type: string
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      created_at:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      status:
        type: boolean
      unit_type:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  tractor_unit.UpdateTractorUnitRequest:
    properties:
      brand:
        type: string
      capacity:
        type: string
      chassis:
        type: string
      color:
        type: string
      driver_id:
        type: integer
      engine_power:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      manufacture_year:
        type: integer
      model:
        type: string
      renavan:
        type: string
      state:
        type: string
      unit_type:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  trailer.CreateTrailerRequest:
    properties:
      axles:
        type: integer
      body_type:
        type: string
      chassis:
        type: string
      height:
        type: number
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      width:
        type: number
    type: object
  trailer.TrailerResponse:
    properties:
      axles:
        type: integer
      body_type:
        type: string
      chassis:
        type: string
      created_at:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      status:
        type: boolean
      updated_at:
        type: string
      user_id:
        type: integer
      width:
        type: number
    type: object
  trailer.UpdateTrailerRequest:
    properties:
      axles:
        type: integer
      body_type:
        enum:
        - open
        - chest
        - bulk_carrier
        - sider
        type: string
      chassis:
        type: string
      height:
        type: number
      id:
        type: integer
      length:
        type: number
      license_plate:
        type: string
      load_capacity:
        type: number
      renavan:
        type: string
      state:
        type: string
      width:
        type: number
    type: object
  user.GetUserResponse:
    properties:
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      created_at:
        type: string
      document:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      profile_id:
        type: integer
      profile_picture:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
      updated_at:
        type: string
    type: object
  user.UpdateUserAddressRequest:
    properties:
      cep:
        type: string
      city:
        type: string
      complement:
        type: string
      id:
        type: integer
      neighborhood:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  user.UpdateUserPersonalInfoRequest:
    properties:
      document:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      city:
        type: string
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      profile_picture:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  user.UpdateUserResponse:
    properties:
      city:
        type: string
      document:
        type: string
      email:
        type: string
      google_id:
        type: string
      id:
        type: integer
      name:
        type: string
      neighborhood:
        type: string
      phone:
        type: string
      profile_id:
        type: integer
      profile_picture:
        type: string
      state:
        type: string
      street:
        type: string
      street_number:
        type: string
    type: object
  ws.CreateChatRoomRequest:
    properties:
      advertisement_id:
        type: integer
    type: object
  ws.CreateChatRoomResponse:
    properties:
      advertisement_id:
        type: integer
      advertisement_user_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      interested_user_id:
        type: integer
    type: object
  ws.MessageResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      message_id:
        type: integer
      name:
        type: string
      profile_picture:
        type: string
      room_id:
        type: integer
      type_message:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
paths:
  /advertisement/create:
    post:
      consumes:
      - application/json
      description: Create a Advertisement.
      parameters:
      - description: Advertisement Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/advertisement.CreateAdvertisementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Advertisement Info
          schema:
            $ref: '#/definitions/advertisement.AdvertisementResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Advertisement.
      tags:
      - Advertisement
  /advertisement/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Advertisement.
      parameters:
      - description: Advertisement id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Advertisement.
      tags:
      - Advertisement
  /advertisement/list:
    get:
      consumes:
      - application/json
      description: Retrieve all Advertisement
      produces:
      - application/json
      responses:
        "200":
          description: List of Advertisement
          schema:
            items:
              $ref: '#/definitions/advertisement.AdvertisementResponseAll'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get All Advertisement
      tags:
      - Advertisement
  /advertisement/update:
    put:
      consumes:
      - application/json
      description: Update a Advertisement.
      parameters:
      - description: Advertisement Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/advertisement.UpdateAdvertisementRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Advertisement Info
          schema:
            $ref: '#/definitions/advertisement.AdvertisementResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Advertisement.
      tags:
      - Advertisement
  /appointment/{id}:
    get:
      consumes:
      - application/json
      description: Get list Appointment.
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Appointment Info
          schema:
            $ref: '#/definitions/appointments.AppointmentResponseList'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get list Appointment.
      tags:
      - Appointments
  /appointment/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Appointment.
      parameters:
      - description: Appointment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Appointment.
      tags:
      - Appointments
  /appointment/update:
    put:
      consumes:
      - application/json
      description: Update an Appointment.
      parameters:
      - description: Appointment Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/appointments.UpdateAppointmentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update an Appointment.
      tags:
      - Appointments
  /attach/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete an attachment logically (update status and remove file from
        bucket).
      parameters:
      - description: Attachment ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Attachment (Logical)
      tags:
      - Attach
  /attach/upload:
    post:
      consumes:
      - multipart/form-data
      description: Create Attach.
      parameters:
      - collectionFormat: csv
        description: File to upload. Only accepts .jpg, .jpeg, .png, and .pdf files.
        in: formData
        items:
          type: file
        name: files_input
        required: true
        type: array
      - description: CodeID
        in: formData
        name: code_id
        required: true
        type: string
      - description: Origin
        in: formData
        name: origin
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Attach.
      tags:
      - Attach
  /chat/create-room:
    post:
      consumes:
      - application/json
      description: Creates a chat room associated with an advertisement.
      parameters:
      - description: Chat Room Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ws.CreateChatRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Chat Room Info
          schema:
            $ref: '#/definitions/ws.CreateChatRoomResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new chat room.
      tags:
      - WebSocket
  /chat/messages/:room_id:
    get:
      consumes:
      - application/json
      description: Fetches chat messages by the specified room ID.
      parameters:
      - description: Chat Room ID
        in: path
        name: room_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of chat messages
          schema:
            items:
              $ref: '#/definitions/ws.MessageResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve messages from a chat room.
      tags:
      - WebSocket
  /driver/create:
    post:
      consumes:
      - application/json
      description: Create a Driver.
      parameters:
      - description: Driver Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/drivers.CreateDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Driver Info
          schema:
            $ref: '#/definitions/drivers.DriverResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Driver.
      tags:
      - Drivers
  /driver/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Driver.
      parameters:
      - description: Driver id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete Driver.
      tags:
      - Drivers
  /driver/list:
    put:
      consumes:
      - application/json
      description: Get Driver.
      parameters:
      - description: Driver id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Driver Info
          schema:
            $ref: '#/definitions/drivers.DriverResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Driver.
      tags:
      - Drivers
  /driver/update:
    put:
      consumes:
      - application/json
      description: Update a Driver.
      parameters:
      - description: Driver Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/drivers.UpdateDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Driver Info
          schema:
            $ref: '#/definitions/drivers.DriverResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Driver.
      tags:
      - Drivers
  /public/advertisement/list:
    get:
      consumes:
      - application/json
      description: Retrieve all Advertisement
      produces:
      - application/json
      responses:
        "200":
          description: List of Advertisement
          schema:
            items:
              $ref: '#/definitions/advertisement.AdvertisementResponseNoUser'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Advertisement
      tags:
      - Advertisement
  /public/check-route-tolls:
    post:
      consumes:
      - application/json
      description: Calculates the best routes based on provided information.
      parameters:
      - description: Route calculation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/geolocation_internal_new_routes.FrontInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Calculated Routes Info
          schema:
            $ref: '#/definitions/routes.FinalOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Calculate possible routes.
      tags:
      - Routes
  /route/favorite/list:
    get:
      consumes:
      - application/json
      description: Get FavoriteRoute.
      parameters:
      - description: FavoriteRoute id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Favorite Route Info
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get FavoriteRoute.
      tags:
      - FavoriteRoutes
  /route/favorite/remove/:id:
    put:
      consumes:
      - application/json
      description: Get FavoriteRoute.
      parameters:
      - description: FavoriteRoute id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get FavoriteRoute.
      tags:
      - FavoriteRoutes
  /tractor-unit/create:
    post:
      consumes:
      - application/json
      description: Create a TractorUnit.
      parameters:
      - description: TractorUnit Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tractor_unit.CreateTractorUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: TractorUnit Info
          schema:
            $ref: '#/definitions/tractor_unit.TractorUnitResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a TractorUnit.
      tags:
      - TractorUnits
  /tractor-unit/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete TractorUnit.
      parameters:
      - description: TractorUnit id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete TractorUnit.
      tags:
      - TractorUnits
  /tractor-unit/list:
    put:
      consumes:
      - application/json
      description: Get Tractor Unit.
      parameters:
      - description: TractorUnit id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Tractor Unit.
      tags:
      - TractorUnits
  /tractor-unit/update:
    put:
      consumes:
      - application/json
      description: Update a TractorUnit.
      parameters:
      - description: TractorUnit Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/tractor_unit.UpdateTractorUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: TractorUnit Info
          schema:
            $ref: '#/definitions/tractor_unit.TractorUnitResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a TractorUnit.
      tags:
      - TractorUnits
  /trailer/create:
    post:
      consumes:
      - application/json
      description: Create a Trailer.
      parameters:
      - description: Trailer Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/trailer.CreateTrailerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trailer Info
          schema:
            $ref: '#/definitions/trailer.TrailerResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a Trailer.
      tags:
      - Trailer
  /trailer/delete/{id}:
    put:
      consumes:
      - application/json
      description: Delete Trailer.
      parameters:
      - description: Trailer id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Trailer.
      tags:
      - Trailer
  /trailer/list:
    put:
      consumes:
      - application/json
      description: Get Trailer.
      parameters:
      - description: Trailer id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Trailer.
      tags:
      - Trailer
  /trailer/update:
    put:
      consumes:
      - application/json
      description: Update a Trailer.
      parameters:
      - description: Trailer Request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/trailer.UpdateTrailerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Trailer Info
          schema:
            $ref: '#/definitions/trailer.TrailerResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a Trailer.
      tags:
      - Trailer
  /user/address/update:
    put:
      consumes:
      - application/json
      description: Updates the address details of a user.
      parameters:
      - description: User Address Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Address Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Address.
      tags:
      - Users
  /user/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the authenticated user account.
      produces:
      - application/json
      responses:
        "200":
          description: Success message
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a User.
      tags:
      - Users
  /user/info:
    get:
      consumes:
      - application/json
      description: Retrieve all user data.
      produces:
      - application/json
      responses:
        "200":
          description: 'Get User '
          schema:
            $ref: '#/definitions/user.GetUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get User Info.
      tags:
      - Users
  /user/personal/update:
    put:
      consumes:
      - application/json
      description: Updates the personal details of a user.
      parameters:
      - description: User Personal Info Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserPersonalInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated Personal Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Personal Info.
      tags:
      - Users
  /user/plan:
    post:
      consumes:
      - application/json
      description: Assigns a user to a selected plan.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User Plan Info
          schema:
            $ref: '#/definitions/plans.UserPlanResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a User Plan.
      tags:
      - Users
  /user/update:
    put:
      consumes:
      - application/json
      description: Update the authenticated user’s profile information.
      parameters:
      - description: User Update Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated User Info
          schema:
            $ref: '#/definitions/user.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update User Information.
      tags:
      - Users
  /v2/create:
    post:
      consumes:
      - application/json
      description: Register a new user in the system.
      parameters:
      - description: User Creation Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.RequestCreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Created User Info
          schema:
            $ref: '#/definitions/login.ResponseCreateUser'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new user.
      tags:
      - Users
  /v2/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user by email and password.
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Authenticated User Info
          schema:
            $ref: '#/definitions/login.ResponseLogin'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Authenticate a user.
      tags:
      - Users
  /ws:
    get:
      consumes:
      - application/json
      description: Establishes a WebSocket connection for real-time communication.
      produces:
      - application/json
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Handle WebSocket connection.
      tags:
      - WebSocket
swagger: "2.0"
