// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://simpplify.com.br/contact",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/address/city/{idState}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna todas as cidades de um estado específico, utilizando o ID do estado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Cidades por Estado",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Estado",
                        "name": "idState",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Cidades",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.CityResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Busca um endereço por pesquisa. Pode ser: 1. Nome de localidade, 2. Latitude e Longitude ou 3. Endereço completo (Rua, bairro, número).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Endereço por Consulta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consulta do Endereço",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Endereço",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.AddressResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find/v2": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Busca um endereço por pesquisa. Endereço completo (Rua, bairro, número).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Endereço por Consulta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consulta do Endereço",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Endereço",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.AddressResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/find/{cep}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Encontra um endereço pelo CEP, retornando o tipo baseado nas repetições encontradas.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Endereço por CEP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CEP",
                        "name": "cep",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Endereço",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.AddressCEPResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/address/state": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retorna todos os estados disponíveis.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Endereços"
                ],
                "summary": "Buscar Todos os Estados",
                "responses": {
                    "200": {
                        "description": "Lista de Estados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/address.StateResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um anúncio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Criar um Anúncio.",
                "parameters": [
                    {
                        "description": "Requisição de Anúncio",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.CreateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Anúncio",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui um anúncio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Excluir um Anúncio.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Anúncio",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera todos os anúncios.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Obter Todos os Anúncios.",
                "responses": {
                    "200": {
                        "description": "Lista de Anúncios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseAll"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/route": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza a rota escolhida no anúncio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Atualizar Escolha de Rota do Anúncio.",
                "parameters": [
                    {
                        "description": "Requisição para escolha de rota do anúncio",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.UpdateAdsRouteChooseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza um anúncio.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Atualizar um Anúncio.",
                "parameters": [
                    {
                        "description": "Requisição de Anúncio",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.UpdateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Anúncio",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui um agendamento.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agendamentos"
                ],
                "summary": "Excluir um Agendamento.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Agendamento",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza um agendamento.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agendamentos"
                ],
                "summary": "Atualizar um Agendamento.",
                "parameters": [
                    {
                        "description": "Requisição de Agendamento",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/appointments.UpdateAppointmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/appointment/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera a lista de agendamentos para um usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Agendamentos"
                ],
                "summary": "Obter lista de Agendamentos.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações dos Agendamentos",
                        "schema": {
                            "$ref": "#/definitions/appointments.AppointmentResponseList"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Mark an existing attachment as inactive and create a new record with the provided file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Update Attachment (Logical Delete and Replace)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "New attachment file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Attach.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Create Attach.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "File to upload. Only accepts .jpg, .jpeg, .png, and .pdf files.",
                        "name": "files_input",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CodeID",
                        "name": "code_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attachment/list/{type}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Attachment.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Get Attachment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/create-room": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a chat room associated with an advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Create a new chat room.",
                "parameters": [
                    {
                        "description": "Chat Room Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ws.CreateChatRoomRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat Room Info",
                        "schema": {
                            "$ref": "#/definitions/ws.CreateChatRoomResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/chat/messages/:room_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches chat messages by the specified room ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Retrieve messages from a chat room.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat Room ID",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of chat messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ws.MessageResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-route-tolls-cep": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calcula as melhores opções de rota a partir dos CEPs de origem e destino.\n\nCampos esperados no body:\n- origin_cep: \\\"01001000\\\" (CEP de origem)\n- destination_cep: \\\"20040002\\\" (CEP de destino)\n- consumptionCity: 20         (Consumo de combustível na cidade, em km/l)\n- consumptionHwy: 22         (Consumo de combustível na estrada, em km/l)\n- price: 6.20                (Preço do combustível em BRL)\n- axles: 2                  (Quantidade de eixos: 2, 4, 6, 8, 9)\n- waypoints: [\\\"01310940\\\",\\\"20050013\\\"] (Lista de CEPs para pontos de parada)\n- public_or_private: \\\"public\\\" | \\\"private\\\" (Define se conta na cota pública ou privada)\n- favorite: true             (Se deseja favoritar essa rota)\n- type: \\\"Auto\\\"              (Tipo de veículo: Truck, Bus, Auto, Motorcycle)\n- typeRoute: \\\"eficiente\\\"    (Rota específica: eficiente, rápida ou barata)\n- route_options: {\ninclude_fuel_stations: false,   (retorna postos de gasolina)\ninclude_route_map: false,        (retorna rotograma da rota)\ninclude_toll_costs: false,       (retorna pedágios e custos gerais)\ninclude_weigh_stations: false,   (retorna balanças)\ninclude_freight_calc: false,     (retorna cálculo de frete ANTT)\ninclude_polyline: false          (retorna polyline para mapas)\n} (Opções adicionais para a rota)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calcular rotas com base em CEP.",
                "parameters": [
                    {
                        "description": "Requisição para cálculo de rota por CEP",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfoCEP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações calculadas da rota",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Não Encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-route-tolls-coordinate": {
            "post": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calcula as melhores opções de rota a partir de uma latitude e longitude de origem e destino.\n\nCampos esperados no body:\n- origin_lat: \\\"-25.550520\\\" (Latitude do local de saída)\n- origin_lng: \\\"-48.633309\\\" (Longitude do local de saída)\n- destination_lat: \\\"-31.0368176\\\" (Latitude do local de chegada)\n- destination_lng: \\\"-51.0368176\\\" (Longitude do local de chegada)\n- axles: 2 (Quantidade de eixos, possível somente: 2, 4, 6, 8, 9)\n- consumptionCity: 20 (Consumo de combustível na cidade)\n- consumptionHwy: 22 (Consumo de combustível na estrada)\n- price: 6.20 (Preço da gasolina)\n- waypoints: [{\\\"lat\\\": \\\"-23.223701\\\",\\\"lng\\\": \\\"-45.900907\\\"},{\\\"lat\\\": \\\"-22.755611\\\",\\\"lng\\\": \\\"-44.168869\\\"}] (Lista de pontos de parada, definida pelas coordenadas)\n- favorite: true (Se deseja favoritar essa rota)\n- type: \\\"Auto\\\" (Tipo do automóvel, possível: Truck, Bus, Auto, Motorcycle)\n- typeRoute: \\\"eficiente\\\" (Caso queira apenas uma rota: eficiente, rápida ou barata)\n- route_options: {\ninclude_fuel_stations: false, (traz postos de gasolina)\ninclude_route_map: false, (traz rotograma da rota)\ninclude_toll_costs: false, (traz pedágios e os custos gerais)\ninclude_weigh_stations: false, (traz balanças)\ninclude_freight_calc: false, (traz frestes, segundo a ANTT calculados)\ninclude_polyline: false (traz polyline para renderizar em mapas)\n} (Opções adicionais para a rota)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calcular rotas com base em coordenadas.",
                "parameters": [
                    {
                        "description": "Requisição para cálculo de rota por coordenadas",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfoCoordinate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações calculadas da rota",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Não Encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check-route-tolls-easy": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calcula as melhores opções de rota a partir de uma origem e destino.\n\nCampos esperados no body:\n- origin: \"São Paulo\" (Local de chegada)\n- destination: \"Salvador\" (Local de saída)\n- axles: 2 (Quantidade de eixos, possível somente: 2, 4, 6, 8, 9)\n- consumptionCity: 20 (Consumo de combustível na cidade)\n- consumptionHwy: 22 (Consumo de combustível na estrada)\n- price: 6.20 (Preço da gasolina)\n- waypoints: [\"Rio de Janeiro\", \"Vitória da Conquista\"] (Lista de pontos de parada)\n- favorite: true (Se deseja favoritar essa rota)\n- type: \"Auto\" (Tipo do automóvel, possíveis: Truck, Bus, Auto, Motorcycle)\n- typeRoute: \"eficiente\" (Caso queira apenas uma rota: eficiente, rápida ou barata)\n- route_options: {\ninclude_fuel_stations: false, (traz postos de gasolina)\ninclude_route_map: false, (traz rotograma da rota)\ninclude_toll_costs: false, (traz pedágios e os custos gerais)\ninclude_weigh_stations: false, (traz balanças)\ninclude_freight_calc: false, (traz frestes, segundo a ANTT calculados)\ninclude_polyline: false (traz polyline para renderizar em mapas)\n} (Opções adicionais para a rota)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Calcular rotas possíveis.",
                "parameters": [
                    {
                        "description": "Requisição para cálculo de rota",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.FrontInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações calculadas da rota",
                        "schema": {
                            "$ref": "#/definitions/new_routes.FinalOutput"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Não Encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "description": "Registra um novo usuário no sistema.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Criar um novo usuário.",
                "parameters": [
                    {
                        "description": "Requisição para criação de usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Usuário Criado",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create/client": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Registra um novo cliente usuário no sistema.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Criar um novo cliente usuário.",
                "parameters": [
                    {
                        "description": "Requisição para criação de usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Usuário Criado",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseCreateUser"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dashboard/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações do Dashboard.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Obter Dashboard.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Dashboard",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data de início (formato YYYY-MM-DD)",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data de fim (formato YYYY-MM-DD)",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Dashboard",
                        "schema": {
                            "$ref": "#/definitions/dashboard.Response"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um motorista.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Motoristas"
                ],
                "summary": "Criar um Motorista.",
                "parameters": [
                    {
                        "description": "Requisição de Motorista",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.CreateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Motorista",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui um motorista.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Motoristas"
                ],
                "summary": "Excluir um Motorista.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Motorista",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações do motorista.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obter Motorista.",
                "responses": {
                    "200": {
                        "description": "Informações do Motorista",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/list/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações do motorista a partir do ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obter Motorista por ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Motorista",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Motorista",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza os dados de um motorista.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Motoristas"
                ],
                "summary": "Atualizar um Motorista.",
                "parameters": [
                    {
                        "description": "Requisição de Motorista",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.UpdateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Motorista",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Autentica um usuário utilizando email e senha.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Autenticar um usuário.",
                "parameters": [
                    {
                        "description": "Requisição de Login",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Usuário Autenticado",
                        "schema": {
                            "$ref": "#/definitions/login.ResponseLogin"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payment-history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera o histórico de pagamentos de um usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pagamentos"
                ],
                "summary": "Obter Histórico de Pagamentos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Usuário",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista do Histórico de Pagamentos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payment.PaymentHistResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/public/advertisement/list": {
            "get": {
                "description": "Recupera um anúncio pelo seu ID (público).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Anúncio"
                ],
                "summary": "Obter Anúncio por ID (Público).",
                "responses": {
                    "200": {
                        "description": "Informações do Anúncio",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseNoUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get FavoriteRoute.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rotas Favoritas"
                ],
                "summary": "Get FavoriteRoute.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite Route Info",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/favorite/remove/:id": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get FavoriteRoute.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rotas Favoritas"
                ],
                "summary": "Get FavoriteRoute.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FavoriteRoute id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/route/simple": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a simple route with distance and duration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routes"
                ],
                "summary": "Get simple route information.",
                "parameters": [
                    {
                        "description": "Route calculation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Route details",
                        "schema": {
                            "$ref": "#/definitions/new_routes.SimpleRouteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/check-plate/{plate}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Verifica se a placa existe ou já está cadastrada.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cavalo"
                ],
                "summary": "Verificar Placa.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Placa do Veículo",
                        "name": "plate",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resultado da verificação da placa",
                        "schema": {}
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria uma unidade tratora.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cavalo"
                ],
                "summary": "Criar uma Unidade Tratora.",
                "parameters": [
                    {
                        "description": "Requisição de Unidade Tratora",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.CreateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações da Unidade Tratora",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui uma unidade tratora.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cavalo"
                ],
                "summary": "Excluir uma Unidade Tratora.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da Unidade Tratora",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações da unidade tratora.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cavalo"
                ],
                "summary": "Obter Unidade Tratora.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da Unidade Tratora",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações da Unidade Tratora",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/list/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações do reboque a partir do ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carroceria"
                ],
                "summary": "Obter Carroceria por ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Carroceria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Carroceria",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza os dados de uma unidade tratora.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cavalo"
                ],
                "summary": "Atualizar uma Unidade Tratora.",
                "parameters": [
                    {
                        "description": "Requisição de Unidade Tratora",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.UpdateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações da Unidade Tratora",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cria um reboque.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carroceria"
                ],
                "summary": "Criar um Carroceria.",
                "parameters": [
                    {
                        "description": "Requisição de Carroceria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.CreateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Carroceria",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/delete/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui um reboque.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carroceria"
                ],
                "summary": "Excluir um Carroceria.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Carroceria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera as informações do reboque.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carroceria"
                ],
                "summary": "Obter Carroceria.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Carroceria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Carroceria",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza as informações de um reboque.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Carroceria"
                ],
                "summary": "Atualizar um Carroceria.",
                "parameters": [
                    {
                        "description": "Requisição de Carroceria",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.UpdateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Carroceria",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/address/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza os detalhes do endereço do usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Atualizar Endereço do Usuário.",
                "parameters": [
                    {
                        "description": "Requisição de Atualização de Endereço do Usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações Atualizadas do Endereço",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Exclui a conta do usuário autenticado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Excluir um Usuário.",
                "responses": {
                    "200": {
                        "description": "Mensagem de sucesso",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/exists": {
            "post": {
                "description": "Verifica se o usuário existe a partir do e-mail fornecido.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Verificar Existência do Usuário.",
                "parameters": [
                    {
                        "description": "Requisição para Verificar Existência do Usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserExitsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do Usuário",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponse"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recupera todos os dados do usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Obter Informações do Usuário.",
                "responses": {
                    "200": {
                        "description": "Informações do Usuário",
                        "schema": {
                            "$ref": "#/definitions/user.GetUserResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/password/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza a senha do usuário autenticado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Atualizar Senha do Usuário.",
                "parameters": [
                    {
                        "description": "Requisição de Atualização de Senha",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/personal/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza os dados pessoais do usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Atualizar Informações Pessoais do Usuário.",
                "parameters": [
                    {
                        "description": "Requisição de Atualização de Informações Pessoais do Usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserPersonalInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações Pessoais Atualizadas",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/plan": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atribui um usuário a um plano selecionado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Criar um Plano de Usuário.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Plano",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do Plano do Usuário",
                        "schema": {
                            "$ref": "#/definitions/plans.UserPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/recover": {
            "post": {
                "description": "Inicia o processo de recuperação de senha para o usuário.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Recuperar Senha.",
                "parameters": [
                    {
                        "description": "Requisição de Recuperação de Senha",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RecoverPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/recover/confirm": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Confirma a recuperação de senha utilizando o token recebido.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Confirmar Recuperação de Senha.",
                "parameters": [
                    {
                        "description": "Requisição de Confirmação de Recuperação de Senha",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ConfirmRecoverPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Atualiza as informações do perfil do usuário autenticado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Usuários"
                ],
                "summary": "Atualizar Informações do Usuário.",
                "parameters": [
                    {
                        "description": "Requisição de Atualização do Usuário",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações Atualizadas do Usuário",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webhook/stripe": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Recebe e processa os eventos do webhook do Stripe.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pagamentos"
                ],
                "summary": "Processar Webhook do Stripe",
                "responses": {
                    "200": {
                        "description": "Sucesso",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Requisição Inválida",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro Interno do Servidor",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Establishes a WebSocket connection for real-time communication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WebSocket"
                ],
                "summary": "Handle WebSocket connection.",
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "address.AddressCEPResponse": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "neighborhood_name": {
                    "type": "string"
                },
                "state_uf": {
                    "type": "string"
                },
                "street_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "address.AddressDetail": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "id_address": {
                    "type": "integer"
                },
                "is_exactly": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "address.AddressResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.AddressDetail"
                    }
                },
                "city": {
                    "type": "string"
                },
                "id_street": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "address.CityResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "address.StateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponse": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseAll": {
            "type": "object",
            "properties": {
                "active_duration": {
                    "type": "string"
                },
                "active_freight": {
                    "type": "integer"
                },
                "active_there": {
                    "type": "string"
                },
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "route_choose": {
                    "$ref": "#/definitions/new_routes.RouteOutput"
                },
                "route_index_choose": {
                    "type": "integer"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_city": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                },
                "user_state": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseNoUser": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.CreateAdvertisementRequest": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.UpdateAdsRouteChooseRequest": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "new_route": {
                    "type": "integer"
                }
            }
        },
        "advertisement.UpdateAdvertisementRequest": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "cep_destination": {
                    "type": "string"
                },
                "cep_origin": {
                    "type": "string"
                },
                "city_destination": {
                    "type": "string"
                },
                "city_origin": {
                    "type": "string"
                },
                "complement_destination": {
                    "type": "string"
                },
                "complement_origin": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood_destination": {
                    "type": "string"
                },
                "neighborhood_origin": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "state_destination": {
                    "type": "string"
                },
                "state_origin": {
                    "type": "string"
                },
                "street_destination": {
                    "type": "string"
                },
                "street_number_destination": {
                    "type": "string"
                },
                "street_number_origin": {
                    "type": "string"
                },
                "street_origin": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "appointments.AppointmentResponseList": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                },
                "truck_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "appointments.UpdateAppointmentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "situation": {
                    "type": "string"
                }
            }
        },
        "dashboard.Calendar": {
            "type": "object",
            "properties": {
                "date_pickup": {
                    "type": "string"
                },
                "situation": {
                    "type": "string"
                },
                "time_pickup": {
                    "type": "string"
                }
            }
        },
        "dashboard.DriverEnterprise": {
            "type": "object",
            "properties": {
                "disponibilidade": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reces_finished": {
                    "type": "integer"
                }
            }
        },
        "dashboard.FreightHistory": {
            "type": "object",
            "properties": {
                "date_delivery": {
                    "type": "string"
                },
                "freight": {
                    "type": "integer"
                },
                "name_enterprise": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "time_delivery": {
                    "type": "string"
                }
            }
        },
        "dashboard.FutureFreights": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "date_pickup": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "time_pickup": {
                    "type": "string"
                }
            }
        },
        "dashboard.MonthlyBilling": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "integer"
                },
                "total_billed": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "dashboard.Response": {
            "type": "object",
            "properties": {
                "calendar": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.Calendar"
                    }
                },
                "comparison_previous_month_customers_served": {
                    "type": "number"
                },
                "comparison_previous_month_proposals": {
                    "type": "number"
                },
                "comparison_previous_month_total_freight": {
                    "type": "number"
                },
                "customers_served": {
                    "type": "integer"
                },
                "driver_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.DriverEnterprise"
                    }
                },
                "driver_id": {
                    "type": "integer"
                },
                "freight_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.FreightHistory"
                    }
                },
                "future_freights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.FutureFreights"
                    }
                },
                "monthly_billing": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.MonthlyBilling"
                    }
                },
                "proposals": {
                    "type": "integer"
                },
                "total_freight_completed": {
                    "type": "number"
                },
                "total_receivable": {
                    "type": "number"
                },
                "tract_unit_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.TractUnitEnterprise"
                    }
                },
                "trailer_enterprise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.TrailerEnterprise"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dashboard.TractUnitEnterprise": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string"
                }
            }
        },
        "dashboard.TrailerEnterprise": {
            "type": "object",
            "properties": {
                "body_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "load_capacity": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "drivers.CreateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "drivers.DriverResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string"
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "drivers.UpdateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "login.RequestCreateUser": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "telephone",
                "type_person"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type_person": {
                    "type": "integer"
                }
            }
        },
        "login.RequestLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "login.ResponseCreateUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "login.ResponseLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "new_routes.AddressInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                }
            }
        },
        "new_routes.ArrivalResponse": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "new_routes.Coordinate": {
            "type": "object",
            "properties": {
                "lat": {
                    "type": "string"
                },
                "lng": {
                    "type": "string"
                }
            }
        },
        "new_routes.Costs": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "cash": {
                    "type": "number"
                },
                "fuel_in_the_city": {
                    "type": "number"
                },
                "fuel_in_the_hwy": {
                    "type": "number"
                },
                "maximumTollCost": {
                    "type": "number"
                },
                "minimumTollCost": {
                    "type": "number"
                },
                "prepaidCard": {
                    "type": "number"
                },
                "tag": {
                    "type": "number"
                },
                "tagAndCash": {
                    "type": "number"
                }
            }
        },
        "new_routes.Distance": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.Duration": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "new_routes.FinalOutput": {
            "type": "object",
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.RouteOutput"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.Summary"
                }
            }
        },
        "new_routes.FrontInfo": {
            "type": "object",
            "required": [
                "destination",
                "origin",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "new_routes.FrontInfoCEP": {
            "type": "object",
            "required": [
                "destination_cep",
                "origin_cep",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination_cep": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin_cep": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "new_routes.FrontInfoCoordinate": {
            "type": "object",
            "required": [
                "destination_lat",
                "destination_lng",
                "origin_lat",
                "origin_lng",
                "type"
            ],
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "consumptionCity": {
                    "type": "number"
                },
                "consumptionHwy": {
                    "type": "number"
                },
                "destination_lat": {
                    "type": "string"
                },
                "destination_lng": {
                    "type": "string"
                },
                "favorite": {
                    "type": "boolean"
                },
                "origin_lat": {
                    "type": "string"
                },
                "origin_lng": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "public_or_private": {
                    "type": "string"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Truck",
                        "Bus",
                        "Auto",
                        "Motorcycle",
                        "truck",
                        "bus",
                        "auto",
                        "motorcycle"
                    ]
                },
                "typeRoute": {
                    "type": "string"
                },
                "waypoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Coordinate"
                    }
                }
            }
        },
        "new_routes.FuelEfficiency": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "number"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "hwy": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.FuelPrice": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "fuel_unit": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "units": {
                    "type": "string"
                }
            }
        },
        "new_routes.GasStation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/new_routes.Location"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "new_routes.Instruction": {
            "type": "object",
            "properties": {
                "img": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "new_routes.Location": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "new_routes.RouteOptions": {
            "type": "object",
            "properties": {
                "include_freight_calc": {
                    "description": "Se deve calcular frete",
                    "type": "boolean"
                },
                "include_fuel_stations": {
                    "description": "Se deve incluir postos de combustível",
                    "type": "boolean"
                },
                "include_polyline": {
                    "description": "Se deve retornar polyline",
                    "type": "boolean"
                },
                "include_route_map": {
                    "description": "Se deve incluir rotograma",
                    "type": "boolean"
                },
                "include_toll_costs": {
                    "description": "Se deve incluir pedágios",
                    "type": "boolean"
                },
                "include_weigh_stations": {
                    "description": "Se deve incluir balanças",
                    "type": "boolean"
                }
            }
        },
        "new_routes.RouteOutput": {
            "type": "object",
            "properties": {
                "balances": {},
                "costs": {
                    "$ref": "#/definitions/new_routes.Costs"
                },
                "freight_load": {
                    "type": "object",
                    "additionalProperties": true
                },
                "gas_stations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.GasStation"
                    }
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Instruction"
                    }
                },
                "polyline": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/new_routes.RouteSummary"
                },
                "tolls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/new_routes.Toll"
                    }
                }
            }
        },
        "new_routes.RouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                },
                "hasTolls": {
                    "type": "boolean"
                },
                "route_type": {
                    "type": "string"
                },
                "total_fuel_cost": {
                    "type": "number"
                },
                "url": {
                    "type": "string"
                },
                "url_waze": {
                    "type": "string"
                }
            }
        },
        "new_routes.SimpleRouteRequest": {
            "type": "object",
            "properties": {
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                }
            }
        },
        "new_routes.SimpleRouteResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/definitions/new_routes.SimpleSummary"
                }
            }
        },
        "new_routes.SimpleRouteSummary": {
            "type": "object",
            "properties": {
                "distance": {
                    "$ref": "#/definitions/new_routes.Distance"
                },
                "duration": {
                    "$ref": "#/definitions/new_routes.Duration"
                }
            }
        },
        "new_routes.SimpleSummary": {
            "type": "object",
            "properties": {
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "routes": {
                    "$ref": "#/definitions/new_routes.SimpleRouteSummary"
                }
            }
        },
        "new_routes.Summary": {
            "type": "object",
            "properties": {
                "all_stopping_points": {
                    "type": "array",
                    "items": {}
                },
                "fuel_efficiency": {
                    "$ref": "#/definitions/new_routes.FuelEfficiency"
                },
                "fuel_price": {
                    "$ref": "#/definitions/new_routes.FuelPrice"
                },
                "location_destination": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "location_origin": {
                    "$ref": "#/definitions/new_routes.AddressInfo"
                },
                "route_hist_id": {
                    "type": "integer"
                },
                "route_options": {
                    "$ref": "#/definitions/new_routes.RouteOptions"
                }
            }
        },
        "new_routes.Toll": {
            "type": "object",
            "properties": {
                "arrival": {
                    "$ref": "#/definitions/new_routes.ArrivalResponse"
                },
                "cashCost": {
                    "type": "number"
                },
                "concession": {
                    "type": "string"
                },
                "concession_img": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "free_flow": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "lat": {
                    "type": "number"
                },
                "lng": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "pay_free_flow": {
                    "type": "string"
                },
                "prepaidCardCost": {
                    "type": "number"
                },
                "road": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tagCost": {
                    "type": "number"
                },
                "tagImg": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tagPrimary": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "payment.PaymentHistResponse": {
            "type": "object",
            "properties": {
                "automatic": {
                    "type": "boolean"
                },
                "currency": {
                    "type": "string"
                },
                "customer": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interval": {
                    "type": "string"
                },
                "invoice": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_expireted": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "plans.UserPlanResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "active_date": {
                    "type": "string"
                },
                "annual": {
                    "type": "boolean"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_plan": {
                    "type": "integer"
                },
                "id_user": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.CreateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "can_couple": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string",
                    "enum": [
                        "stump",
                        "truck",
                        "tractor_unit"
                    ]
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.TractorUnitResponse": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "can_couple": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "unit_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.UpdateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.CreateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.TrailerResponse": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.UpdateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string",
                    "enum": [
                        "open",
                        "chest",
                        "bulk_carrier",
                        "sider"
                    ]
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "user.ConfirmRecoverPasswordRequest": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.GetUserResponse": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "secondary_contact": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user.RecoverPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "user.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserAddressRequest": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserPersonalInfoRequest": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "secondary_contact": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UserExitsRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "ws.CreateChatRoomRequest": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                }
            }
        },
        "ws.CreateChatRoomResponse": {
            "type": "object",
            "properties": {
                "advertisement_id": {
                    "type": "integer"
                },
                "advertisement_user_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interested_user_id": {
                    "type": "integer"
                }
            }
        },
        "ws.MessageResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "message_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "type_message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"https", "http"},
	Title:            "Geolocation",
	Description:      "Document API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
