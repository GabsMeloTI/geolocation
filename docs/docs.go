// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/advertisement/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Create a Advertisement.",
                "parameters": [
                    {
                        "description": "Advertisement Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.CreateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertisement Info",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/delete/{id}": {
            "put": {
                "description": "Delete Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Delete Advertisement.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Advertisement id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/list": {
            "get": {
                "description": "Retrieve all Advertisement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get All Advertisement",
                "responses": {
                    "200": {
                        "description": "List of Advertisement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseAll"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/list/public": {
            "get": {
                "description": "Retrieve all Advertisement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get All Advertisement",
                "responses": {
                    "200": {
                        "description": "List of Advertisement",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/advertisement.AdvertisementResponseNoUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/advertisement/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Advertisement.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advertisement"
                ],
                "summary": "Update a Advertisement.",
                "parameters": [
                    {
                        "description": "Advertisement Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/advertisement.UpdateAdvertisementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertisement Info",
                        "schema": {
                            "$ref": "#/definitions/advertisement.AdvertisementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an attachment logically (update status and remove file from bucket).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Delete Attachment (Logical)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/attach/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Attach.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attach"
                ],
                "summary": "Create Attach.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "File to upload. Only accepts .jpg, .jpeg, .png, and .pdf files.",
                        "name": "files_input",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CodeID",
                        "name": "code_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Origin",
                        "name": "origin",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Create a Driver.",
                "parameters": [
                    {
                        "description": "Driver Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.CreateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Info",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/delete/{id}": {
            "put": {
                "description": "Delete Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Delete Driver.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Driver id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/driver/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Driver.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Drivers"
                ],
                "summary": "Update a Driver.",
                "parameters": [
                    {
                        "description": "Driver Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/drivers.UpdateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver Info",
                        "schema": {
                            "$ref": "#/definitions/drivers.DriverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Create a TractorUnit.",
                "parameters": [
                    {
                        "description": "TractorUnit Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.CreateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TractorUnit Info",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/delete/{id}": {
            "put": {
                "description": "Delete TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Delete TractorUnit.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TractorUnit id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tractor-unit/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a TractorUnit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TractorUnits"
                ],
                "summary": "Update a TractorUnit.",
                "parameters": [
                    {
                        "description": "TractorUnit Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.UpdateTractorUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TractorUnit Info",
                        "schema": {
                            "$ref": "#/definitions/tractor_unit.TractorUnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Create a Trailer.",
                "parameters": [
                    {
                        "description": "Trailer Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.CreateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trailer Info",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/delete/{id}": {
            "put": {
                "description": "Delete Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Delete Trailer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trailer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trailer/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Trailer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trailer"
                ],
                "summary": "Update a Trailer.",
                "parameters": [
                    {
                        "description": "Trailer Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trailer.UpdateTrailerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trailer Info",
                        "schema": {
                            "$ref": "#/definitions/trailer.TrailerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/address": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the address details of a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Address.",
                "parameters": [
                    {
                        "description": "User Address Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Address Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create a new user with email, password, and profile details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a User.",
                "parameters": [
                    {
                        "description": "User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Info",
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes the authenticated user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User.",
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Login a user with email and password or Google authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "User login.",
                "parameters": [
                    {
                        "description": "User Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Info with Token",
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/personal-info": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the personal details of a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Personal Info.",
                "parameters": [
                    {
                        "description": "User Personal Info Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserPersonalInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Personal Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the authenticated user’s profile information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User Information.",
                "parameters": [
                    {
                        "description": "User Update Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated User Info",
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "advertisement.AdvertisementResponse": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseAll": {
            "type": "object",
            "properties": {
                "active_duration": {
                    "type": "string"
                },
                "active_freight": {
                    "type": "integer"
                },
                "active_there": {
                    "type": "string"
                },
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_who": {
                    "type": "string"
                },
                "user_city": {
                    "type": "string"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                },
                "user_state": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.AdvertisementResponseNoUser": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "origin": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.CreateAdvertisementRequest": {
            "type": "object",
            "properties": {
                "advance": {
                    "type": "string"
                },
                "agency": {
                    "type": "boolean"
                },
                "cargo_species": {
                    "type": "string"
                },
                "cargo_type": {
                    "type": "string"
                },
                "cargo_weight": {
                    "type": "number"
                },
                "created_who": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "destination_lat": {
                    "type": "number"
                },
                "destination_lng": {
                    "type": "number"
                },
                "distance": {
                    "type": "integer"
                },
                "expiration_date": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "origin_lat": {
                    "type": "number"
                },
                "origin_lng": {
                    "type": "number"
                },
                "payment_type": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "requires_tarp": {
                    "type": "boolean"
                },
                "situation": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "toll": {
                    "type": "boolean"
                },
                "tracking": {
                    "type": "boolean"
                },
                "trailer": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicles_accepted": {
                    "type": "string"
                }
            }
        },
        "advertisement.UpdateAdvertisementRequest": {
            "type": "object"
        },
        "drivers.CreateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "drivers.DriverResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string"
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "drivers.UpdateDriverRequest": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "license_category": {
                    "type": "string",
                    "enum": [
                        "a",
                        "b",
                        "c",
                        "d",
                        "e"
                    ]
                },
                "license_expiration_date": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "tractor_unit.CreateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "can_couple": {
                    "type": "boolean"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string",
                    "enum": [
                        "stump",
                        "truck",
                        "tractor_unit"
                    ]
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.TractorUnitResponse": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "unit_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "tractor_unit.UpdateTractorUnitRequest": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "capacity": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "integer"
                },
                "engine_power": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "manufacture_year": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.CreateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.TrailerResponse": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string"
                },
                "chassis": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "trailer.UpdateTrailerRequest": {
            "type": "object",
            "properties": {
                "axles": {
                    "type": "integer"
                },
                "body_type": {
                    "type": "string",
                    "enum": [
                        "open",
                        "chest",
                        "bulk_carrier",
                        "sider"
                    ]
                },
                "chassis": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "load_capacity": {
                    "type": "number"
                },
                "renavan": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "required": [
                "document",
                "email",
                "name",
                "phone",
                "profile_id"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "user.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "user.LoginUserResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserAddressRequest": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "complement": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "neighborhood": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserPersonalInfoRequest": {
            "type": "object",
            "properties": {
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "google_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "neighborhood": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_id": {
                    "type": "integer"
                },
                "profile_picture": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
